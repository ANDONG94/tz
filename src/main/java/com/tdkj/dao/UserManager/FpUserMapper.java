package com.tdkj.dao.UserManager;

import com.tdkj.model.FpUser;
import com.tdkj.model.SysRole;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import java.util.List;
@Repository
public interface FpUserMapper {

   @Select("select c.name from fp_user f left join  sys_role_user s  on  " +
           "f.id=s.sys_user_id left join sys_role c on s.sys_role_id=c.id " +
           "where f.id=#{id}")
    List<SysRole> findRole(String id);


 @Select("select * from fp_user f where f.idcard=#{0} and f.mobilephome=#{1} and rownum='1'")
   FpUser selectIdcard(String idcard,String mobilephome);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    int insert(FpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    int insertSelective(FpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    FpUser selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(FpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FP_USER
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(FpUser record);


    /**
     * 根据行政区划查询user用户数量
     * @return
     */
    public String countUserByAab301(String aab301);

    /**
     * 根据用户名查询该用户是否已经存在
     * @return
     */
    public FpUser queryUserByUserName(String username);

    /**
     * 根据用户名密码登录系统
     * @return
     */
    public FpUser LoginByUserNameAndPwd(String username,String password);

    /**
     * 根据aab301 查询用户信息
     * @param aab301
     * @return
     */
    public List<FpUser> queryFpUserByAab301(@Param("aab301")String aab301, @Param("username")String username, @Param("realname")String realname, @Param("idcard")String idcard, @Param("startRecord")String startRecord, @Param("pageSize")String pageSize);

    /**
     * 根据行政区划查询 总条数
     * @param aab301
     * @return
     */
    public String queryAllByAab301(@Param("aab301")String aab301, @Param("username")String username, @Param("realname")String realname, @Param("idcard")String idcard);

}