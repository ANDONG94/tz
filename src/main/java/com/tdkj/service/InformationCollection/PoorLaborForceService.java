package com.tdkj.service.InformationCollection;

import com.tdkj.model.PoorLaborForce;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * Created by len on 2019-04-28.
 */
public interface PoorLaborForceService {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String plf001);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    int insert(PoorLaborForce record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    int insertSelective(PoorLaborForce record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    PoorLaborForce selectByPrimaryKey(String plf001);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(PoorLaborForce record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table poor_labor_force
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(PoorLaborForce record);

    /**
     * 根据贫困户id 查询劳动力信息
     * @return
     */
     List<PoorLaborForce> queryPoorLaborForceByPoorWork(String plf002);

    /**
     *
     * @return
     */
     List<PoorLaborForce> queryExcel(String aab301);

    /**
     * 根据身份证号码查询，该用户是否已经登记
     * @param plf005
     * @return
     */
     String queryWorkerByIdCard(String plf005);
    /**
     * 根据身份证号码查询，该用户是否已经登记
     * @param plf005
     * @return
     */
    PoorLaborForce queryName(String plf005);

    /**
     * 根据贫困户id 删除劳动力信息
     * @param plf002
     * @return
     */
     int deleteByPlf002(String plf002,String realname);


    //************************************以下是台账信息**********************************************************************


    /**
     * 根据行政区划查询劳动力台账信息
     * @return
     */
     List<PoorLaborForce> queryPoorLaborForceAccountByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询台账总共多条
     * @return
     */
     String queryAllPoorLaborForceAccoutByAab301(PoorLaborForce poorLaborForce);

    /**
     * 根据行政区划查询所有贫困人口信息
     */
    List<PoorLaborForce> queryPoorPersonAccountByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);


    /**
     *根据行政区划查询所有贫困人口  共多条
     * @return
     */
    String queryAllPoorPersonAccountByAab301(PoorLaborForce poorLaborForce);

    /**
     *根据行政区划查询台账总共多条
     * @return
     */
     String queryAllPoorLaborForceFamily(PoorLaborForce poorLaborForce);


    PoorLaborForce selectByPrimaryidCard (String idcard);


    /**
     * 根据贫困户id 查询劳动力信息  用于批量删除
     * @return
     */
     List<PoorLaborForce> queryPoorLaborForceByPoorWorkIds(String plf0002s[]);


    /**
     * 根据贫困户id 判断该贫困户下有多少个劳动力属于正常劳动力
     * phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
     String queryNormalWorkerByPlf002(String plf002);

    /**
     * 根据行政区划查询劳动力台账信息导出
     * @return
     */
    List<PoorLaborForce> queryPoorLaborForceImportByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);

    /**
     * 根据行政区划查询劳动力家庭户信息导出
     * @return
     */
    List<PoorLaborForce> queryPoorLaborForceFamily(PoorLaborForce poorLaborForce);

    /**
     *   根据贫困户id 判断该贫困户下有  有就业创业意愿人数
     *   phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
    String havejiuyechuangyecount(String plf002);

    /**
     *   根据贫困户id 判断该贫困户下有  已就业创业人数
     *   phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
    String yijiuyechuangyecount(String plf002);


    /**
     *   根据贫困户id 判断该贫困户下有  已就业创业人名称
     *   phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
    String yijiuyechuangyename(String plf002);

    /**
     *   根据贫困户id 判断该贫困户下有  未就业创业人数
     *   phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
    String weijiuyechuangyecount(String plf002);

    /**
     *   根据贫困户id 判断该贫困户下有  未就业创业人名称
     *   phd001为贫困户id   plf002位劳动力表中对应的贫困户id
     */
    String weijiuyechuangyename(String plf002);


    /**
     * 根据行政区划查询待确认劳动力信息
     * @return
     */
    List<PoorLaborForce> queryPoorLaborForceToBeComfireByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询根据行政区划查询待确认劳动力信息总共多条
     * @return
     */
    String queryAllPoorLaborForceToBeComfireByAab301(PoorLaborForce poorLaborForce);


//***************************************待帮扶查询**********************************************************************************************

    /**
     * 根据行政区划查询  待帮扶劳动力  信息
     * @return
     */
    List<PoorLaborForce> queryTobeHelpWorkerByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询待帮扶劳动力 总共多条
     * @return
     */
    String queryAllTobeHelpWorkerByAab301(PoorLaborForce poorLaborForce);


    /**
     *根据行政区划查询所有贫困劳动力人口  共多条
     * @return
     */
    String queryAllPoorWorkerAccountByAab301(PoorLaborForce poorLaborForce);



    //*************************************************************************************************************************

    /**
     * 根据行政区划查询  重复劳动力  信息
     * @return
     */
    List<PoorLaborForce> queryRepeatPoorLaborForceByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询   重复劳动力 总共多条
     * @return
     */
    String queryRepeatPoorLaborForceAccoutByAab301(PoorLaborForce poorLaborForce);




    //************************************以下是劳动力有转移就业状态,没有就业信息的  台账信息**********************************************************************

    /**
     * 根据行政区划查询劳动力转移就业状态,没有就业信息
     * @return
     */
    List<PoorLaborForce> queryErrorPoorLaborForceAccountByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询台账总共多条  转移就业状态,没有就业信息
     * @return
     */
    String queryAllErrorPoorLaborForceAccoutByAab301(PoorLaborForce poorLaborForce);



    /*************************************************弱劳动力台账************************************************************************************************/

    /**
     * 根据行政区划查询弱劳动力台账信息
     * @return
     */
    List<PoorLaborForce> queryRuoPoorLaborForceAccountByAab301(PoorLaborForce poorLaborForce, String startRecord, String pageSize);



    /**
     *根据行政区划查询弱劳动力台账总共多条
     * @return
     */
    String queryAllRuoPoorLaborForceAccoutByAab301(PoorLaborForce poorLaborForce);


}
